(function() {
    var type_impls = Object.fromEntries([["governor",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrinkableKeyedStateStore%3CK%3E-for-DashMap%3CK,+InMemoryState,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/governor/state/keyed/dashmap.rs.html#64-82\">Source</a><a href=\"#impl-ShrinkableKeyedStateStore%3CK%3E-for-DashMap%3CK,+InMemoryState,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"governor/state/keyed/trait.ShrinkableKeyedStateStore.html\" title=\"trait governor::state::keyed::ShrinkableKeyedStateStore\">ShrinkableKeyedStateStore</a>&lt;K&gt; for <a class=\"type\" href=\"governor/state/keyed/type.DashMapStateStore.html\" title=\"type governor::state::keyed::DashMapStateStore\">DashMapStateStore</a>&lt;K, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain_recent\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/governor/state/keyed/dashmap.rs.html#67-69\">Source</a><a href=\"#method.retain_recent\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"governor/state/keyed/trait.ShrinkableKeyedStateStore.html#tymethod.retain_recent\" class=\"fn\">retain_recent</a>(&amp;self, drop_below: <a class=\"struct\" href=\"governor/nanos/struct.Nanos.html\" title=\"struct governor::nanos::Nanos\">Nanos</a>)</h4></section></summary><div class='docblock'>Remove those keys with state older than <code>drop_below</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to_fit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/governor/state/keyed/dashmap.rs.html#71-73\">Source</a><a href=\"#method.shrink_to_fit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"governor/state/keyed/trait.ShrinkableKeyedStateStore.html#method.shrink_to_fit\" class=\"fn\">shrink_to_fit</a>(&amp;self)</h4></section></summary><div class='docblock'>Shrinks the capacity of the state store, if possible. <a href=\"governor/state/keyed/trait.ShrinkableKeyedStateStore.html#method.shrink_to_fit\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/governor/state/keyed/dashmap.rs.html#75-77\">Source</a><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"governor/state/keyed/trait.ShrinkableKeyedStateStore.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of “live” keys stored in the state store. <a href=\"governor/state/keyed/trait.ShrinkableKeyedStateStore.html#tymethod.len\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/governor/state/keyed/dashmap.rs.html#79-81\">Source</a><a href=\"#method.is_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"governor/state/keyed/trait.ShrinkableKeyedStateStore.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> has no keys stored in it. <a href=\"governor/state/keyed/trait.ShrinkableKeyedStateStore.html#tymethod.is_empty\">Read more</a></div></details></div></details>","ShrinkableKeyedStateStore<K>","governor::state::keyed::DefaultKeyedStateStore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StateStore-for-DashMap%3CK,+InMemoryState,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/governor/state/keyed/dashmap.rs.html#16-33\">Source</a><a href=\"#impl-StateStore-for-DashMap%3CK,+InMemoryState,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"governor/state/trait.StateStore.html\" title=\"trait governor::state::StateStore\">StateStore</a> for <a class=\"type\" href=\"governor/state/keyed/type.DashMapStateStore.html\" title=\"type governor::state::keyed::DashMapStateStore\">DashMapStateStore</a>&lt;K, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Key\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/governor/state/keyed/dashmap.rs.html#19\">Source</a><a href=\"#associatedtype.Key\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"governor/state/trait.StateStore.html#associatedtype.Key\" class=\"associatedtype\">Key</a> = K</h4></section></summary><div class='docblock'>The type of key that the state store can represent.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.measure_and_replace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/governor/state/keyed/dashmap.rs.html#21-32\">Source</a><a href=\"#method.measure_and_replace\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"governor/state/trait.StateStore.html#tymethod.measure_and_replace\" class=\"fn\">measure_and_replace</a>&lt;T, F, E&gt;(&amp;self, key: &amp;Self::<a class=\"associatedtype\" href=\"governor/state/trait.StateStore.html#associatedtype.Key\" title=\"type governor::state::StateStore::Key\">Key</a>, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"governor/nanos/struct.Nanos.html\" title=\"struct governor::nanos::Nanos\">Nanos</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(T, <a class=\"struct\" href=\"governor/nanos/struct.Nanos.html\" title=\"struct governor::nanos::Nanos\">Nanos</a>), E&gt;,</div></h4></section></summary><div class='docblock'>Updates a state store’s rate limiting state for a given key, using the given closure. <a href=\"governor/state/trait.StateStore.html#tymethod.measure_and_replace\">Read more</a></div></details></div></details>","StateStore","governor::state::keyed::DefaultKeyedStateStore"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[8144]}