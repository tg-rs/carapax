searchState.loadedDescShard("nonzero_ext", 0, "Traits to represent generic nonzero integer types\nA trait identifying a non-zero integral type. It is useful …\nThe concrete non-zero type represented by an …\nA trait identifying integral types that have a non-zeroable\nThe primitive type (e.g. <code>u8</code>) underlying this integral type.\nConverts the integer to its non-zero equivalent.\nConverts the integer to its non-zero equivalent without …\nReturns the value as a primitive type.\nConverts the integer to its non-zero equivalent.\nConverts the integer to its non-zero equivalent without …\nHandling non-zero literal values.\nCreates a new non-zero object from an integer that might be\nCreate non-zero values from constant literals easily.\nA representation of a non-zero literal. Used by the […\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConverts the wrapped value to its non-zero equivalent.\nConverts the wrapped value to its non-zero equivalent.\nConverts the wrapped value to its non-zero equivalent.\nConverts the wrapped value to its non-zero equivalent.\nConverts the wrapped value to its non-zero equivalent.\nConverts the wrapped value to its non-zero equivalent.\nConverts the wrapped value to its non-zero equivalent.\nConverts the wrapped value to its non-zero equivalent.\nConverts the wrapped value to its non-zero equivalent.\nConverts the wrapped value to its non-zero equivalent.\nConverts the wrapped value to its non-zero equivalent.\nConverts the wrapped value to its non-zero equivalent.")