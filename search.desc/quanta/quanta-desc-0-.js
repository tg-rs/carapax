searchState.loadedDescShard("quanta", 0, "Performant cross-platform timing with goodies.\nUnified clock for taking measurements.\nErrors thrown during the creation/spawning of the upkeep …\nAn error occurred when trying to spawn the upkeep thread.\nHandle to a running upkeep thread.\nA point-in-time wall-clock measurement.\nType which can be converted into a nanosecond …\nControllable time source for use in tests.\nUltra-low-overhead access to slightly-delayed time.\nAn upkeep thread is already running in this process.\nPanics\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nReturns the amount of time elapsed from another instant to …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nDecrements the time by the given amount.\nCalculates the delta between two raw measurements.\nCalculates the delta, in nanoseconds, between two raw …\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed since this instant was …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIncrements the time by the given amount.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this value, converting it to a nanosecond …\nCreates a new clock that is mocked for controlling the …\nCreates a new <code>Upkeep</code>.\nCreates a new clock with the optimal reference and source …\nCreates a new <code>Upkeep</code> with the specified <code>Clock</code> instance.\nGets the current time, scaled to reference time.\nGets the current time, scaled to reference time.\nGets the underlying time from the fastest available clock …\nGets the most recent current time, scaled to reference …\nGets the most recent current time, scaled to reference …\nReturns the amount of time elapsed from another instant to …\nScales a raw measurement to reference time.\nSets the global recent time.\nStart the upkeep thread, periodically updating the global …\nReturns the amount of time elapsed from another instant to …\nGets the current value of this <code>Mock</code>.\nSets this clock as the default for the duration of a …")